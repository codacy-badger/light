
if OS_WINDOWS || OS_LINUX {
    import "std/sys"
}

#main()

FUNC :: fn (num: u64) -> u64;

main :: fn {
    num := repeat_3(sqrt, 2 + 1);
    assert(num == 6561);

    repeat_3 :: fn (func: FUNC, num: u64 = 1 * 3) -> u64 {
        return func(func(func(num)));
    }

    sqrt :: fn (num: u64) -> u64 { num * num }
}

Vec2 :: struct {
    x: f64 = 1;
    y: f64 = 2;
}

assert :: fn (condition: bool) {
	if !condition {
		//print("ASSERT!");
		sys_exit(1);
	}
}

propagation_fold_example :: fn {
    a := 1;
    b := a + NUM * 1.5;
    c := a + b * 3;

}

NUM :: 12;
