
STD_INPUT_HANDLE  : u32 : -10;
STD_OUTPUT_HANDLE : u32 : -11;
STD_ERROR_HANDLE  : u32 : -12;

INVALID_HANDLE_VALUE : s64 : -1;

#foreign("kernel32")
GetLastError : fn -> u16 :;

#foreign("kernel32", "GetModuleHandleA")
GetModuleHandle : fn (lpModuleName: string) -> *void :;

#foreign("kernel32")
GetStdHandle : fn (code: s32) -> *void :;

#foreign("kernel32", "WriteConsoleA")
WriteConsole : fn (handle: *void, buffer: *void, bytes_to_write: u32, written_bytes: *u32, overlapped: *void) -> u8 :;

#foreign("kernel32")
WriteFile : fn (handle: *void, buffer: *void, bytes_to_write: u32, written_bytes: *u32, overlapped: *void) -> u8 :;

#foreign("kernel32")
GetConsoleMode : fn (handle: *void, mode: *u32) -> u8 :;
