
STD_INPUT_HANDLE  : u32 : -10;
STD_OUTPUT_HANDLE : u32 : -11;
STD_ERROR_HANDLE  : u32 : -12;

INVALID_HANDLE_VALUE : s64 : -1;

#!foreign("kernel32")

ExitProcess : fn (uExitCode: u32) :;

GetLastError : fn -> u16 :;

GetModuleHandleA : fn (lpModuleName: *u8) -> *void :;

GetStdHandle : fn (code: s32) -> *void :;

WriteConsoleA : fn (handle: *void, buffer: *u8, bytes_to_write: u32, written_bytes: *u32, overlapped: *void) -> u8 :;

WriteFile : fn (handle: *void, buffer: *u8, bytes_to_write: u32, written_bytes: *u32, overlapped: *void) -> u8 :;

GetConsoleMode : fn (handle: *void, mode: *u32) -> u8 :;

#!end

GetModuleHandle :: GetModuleHandleA;
WriteConsole :: WriteConsoleA;
