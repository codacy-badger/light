import "examples/print.li"

#run
main :: fn {
	test_factorial();
	test_cast();
	test_strlen();
	test_pointers();
	test_struct();
}

test_struct :: fn {
	Vec3 :: struct {
		x: u32;
		y: u32;
		z: u32;
	}

	v1 : Vec3;
	v1.x = cast(u32) 12;
	v1.y = cast(u32) 16;
	v1.z = cast(u32) 22;

	if (v1.x == cast(u32) 12) print("\nATTR 1!\n", 9);
	if (v1.y == cast(u32) 16) print("\nATTR 2!\n", 9);
	if (v1.z == cast(u32) 22) print("\nATTR 3!\n", 9);
	if (v1.y != cast(u32) 49) print("\nATTR 4!\n", 9);
}

test_factorial :: fn {
	number := factorial(5);

	if number == cast(u32) 120 {
		print("Result is 120 :)\n\n", 18);
	} else {
		print("Result is WRONG :(\n\n", 20);
	}

	factorial :: fn (number: u32) -> u32 {
		if (number == cast(u32) 0) cast(u32) 1
		else {
			factorial(number - cast(u32) 1) * number
		}
	}
}

test_cast :: fn {
	num1 : u8 = 55;
	num2 : u64 = 755;
	num3 : s32 = -num1;

	if (55 == 55) print("\nPASS 1!\n", 10);
	if (cast(u8) 55 == num1) print("\nPASS 2!\n", 10);
	if (num2 == cast(u64) 755) print("\nPASS 3!\n", 10);

	if (-55 == -55) print("\nPASS 4!\n", 10);
	if (-55 == cast(s16) -num1) print("\nPASS 5!\n", 10);
}

test_strlen :: fn {
	text := "\nAuto Length";
	length := string_length(text);

	if length > cast(u32) 0 {
		print(text, length);
	}

	string_length :: fn (str: string) -> u32 {
		result : u32 = 0;
		char : u8 = &str;
		while (char != cast(u8) 0) {
			result = result + cast(u32) 1;
			str = str + cast(*u8) 1;
			char = &str;
		}
		return result;
	}
}

test_pointers :: fn {
	number : u8 = 0;
	num_ptr := *number;

	set(num_ptr);
	if (number == 12) print("\nGOOD\n", 6);

	set :: fn (ptr: *u8) {
		&ptr = 12;
	}
}

/*import "examples/nix.li"

#run
main :: fn {
	str := "This is asdqweasadsaewqeqweasdasd\tasd text!\n";
	len := string_length(str);
	write(stdout, str, len);

	string_length :: fn (str: string) -> u32 {
		result : u32 = 0;
		char : u8 = &str;
		while (char != cast(u8) 0) {
			result = result + cast(u32) 1;
			str = str + cast(*u8) 1;
			char = &str;
		}
		return result;
	}
}*/
